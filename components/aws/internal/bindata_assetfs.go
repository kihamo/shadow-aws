// Code generated by go-bindata.
// sources:
// templates/views/ses.html
// templates/views/sns.html
// locales/ru/LC_MESSAGES/aws.mo
// locales/ru/LC_MESSAGES/config.mo
// locales/ru/LC_MESSAGES/ses.mo
// locales/ru/LC_MESSAGES/sns.mo
// DO NOT EDIT!

package internal

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsSesHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\xef\x6e\xdb\x38\x12\xff\x9e\xa7\x18\xe8\x5a\xd8\x39\xc4\x96\xe3\xb4\xdd\x83\x6b\x07\xd7\xed\x75\xb1\x05\xb6\x77\xbd\x26\x77\x1f\xb6\x08\x0a\x5a\x1a\x5b\xcc\x51\xa4\x4a\x52\x8e\xbd\x86\xde\xfd\x40\x52\x92\x65\x9b\x56\x92\xeb\x19\xd8\x14\x2b\x20\x08\xa5\x19\xce\x9f\x1f\x67\x86\x43\x7a\xbd\x86\x18\x67\x94\x23\x04\x91\xe0\x1a\xb9\x0e\xa0\x28\x4e\xc6\x31\x5d\x40\xc4\x88\x52\x93\x20\x23\x73\xec\x69\xaa\x19\x06\x97\x27\x00\x00\x4d\xa2\xfd\xfe\x85\xe1\x4c\x97\x44\xcb\x90\x5c\x5c\xae\xd7\x40\xcf\xff\xc2\x21\x78\x93\x92\xdf\x04\x87\x2b\x9a\x66\x0c\xe1\x5d\x4a\x28\x83\x2b\x94\x0b\x1a\x61\x00\x7d\x28\x8a\x71\x98\x5c\x94\x82\xc3\x98\x2e\x2e\x4f\xca\x7f\x5b\x46\x44\x0c\x89\x9c\xd1\x65\x70\x59\x51\x8d\x82\x19\xcc\x35\xf4\x25\xa6\x84\x72\xca\xe7\x30\xe8\x0f\x76\xad\x97\xe2\xce\x63\x76\x24\x58\x2f\x8d\x7b\xe7\x43\x30\x23\x95\x56\xa3\xa5\xea\x9d\x0f\x9b\x9e\x34\xe6\x2c\xbf\x64\x84\x23\x6b\x50\xf7\x39\x9a\x30\x6d\x71\x25\xc3\x0d\x22\x57\xc8\x63\x30\x36\xb3\x1a\x80\xa1\x67\x4a\xce\x2a\xb9\x9c\x2c\x80\x93\xc5\x94\xc8\x9e\xa4\xf3\x44\x83\x35\xe4\x8b\x16\x82\x4d\xc5\xd2\xa3\xce\xce\x67\xf4\x72\x4c\x1a\x0e\x33\x92\x29\xec\x31\xca\xff\x13\x5c\x8e\x69\x45\x98\x11\x98\x91\x5e\x94\xe0\x42\x0a\xde\xcb\x33\x03\x30\xbd\x1c\x87\xe4\x72\x1c\x32\xea\x31\x2b\xcc\x99\xe7\x6b\xdb\x52\x6d\x4f\xdf\xff\xb4\x85\x60\x15\x85\x1e\x1d\x33\x21\xd3\xda\x6c\x21\xd3\x5e\x22\x24\xfd\x4d\x70\x4d\x18\xd8\x77\x46\xa6\xc8\x7a\x36\x18\x41\x0a\x86\x8e\x2d\x80\x14\x75\x22\xe2\x49\x90\x09\xa5\x03\xa0\xf1\x24\x50\xc8\xe3\x9e\x5b\x01\x12\x69\x2a\xf8\x24\x08\xc9\x9d\x0a\x15\xaa\x00\xb8\x58\x10\x46\x63\xa2\xf1\x00\xb2\x0d\x83\xa9\xc6\xd4\x29\x9f\x4b\x61\xd0\xf3\xce\x70\xeb\x61\xac\x33\xbc\x93\x60\x26\x45\x1a\x6c\x96\x86\x6b\x29\x98\xb3\x1e\xca\xc8\xbc\xa8\x02\xf3\xc2\x1b\x97\xbe\xa7\x8e\xaf\x9f\xac\x74\x13\x59\x30\x56\x19\xe1\x75\x2a\xe0\xd7\x9c\x4a\x8c\x83\xcb\x3f\x8f\x43\x43\x68\x31\x36\xb4\xd6\xb4\x30\xec\x27\xd3\xab\xca\xe4\x57\x0f\x36\x79\x4c\x79\x96\x6b\xd0\xab\x0c\x27\x81\xc6\xa5\x0e\xb6\xd6\xb7\x44\xc6\x2d\x99\xc3\x8c\x93\x14\xab\x71\xc6\x48\x84\x89\x60\x31\xca\x49\x80\x4b\x62\x0a\xcc\xf9\x5f\x63\x61\xaa\x41\x3f\x32\x1c\x0b\xc2\x72\x9c\x04\xeb\x35\xf4\xcd\x8a\x1b\x60\xa0\x28\x02\xa8\x90\x68\x62\xd2\x82\xc5\x5e\xc8\x3e\x84\xf4\xcd\x41\xa2\xc5\xf1\x42\xe4\x5a\x7c\x7f\x01\x62\xf0\x72\xe1\x61\x46\xf7\x05\xc7\x19\x94\x1f\x87\x6d\x11\x73\x2d\x9e\x4e\xbc\xa8\x7c\x7a\x8b\x91\x3e\x5e\xd0\x5c\x55\x0a\xbe\xb7\xc8\xa9\x91\x73\xe1\x53\xbf\xee\x04\x43\xe9\xff\xd3\x89\x08\xe3\xfc\xf1\xc2\xe1\xad\xdb\xa9\xc1\x69\x79\x12\x31\xa1\x90\x99\x05\xf4\x04\x02\x38\xd2\x30\x00\xa5\x57\xa6\x73\xb8\xa3\xb1\x4e\x46\xe7\x83\xc1\xf3\xba\xaa\x58\x3f\x6d\xa5\xb1\xa3\x47\x85\x40\x6d\x82\xc8\x4c\xbb\x51\x85\x56\xc6\x08\xe5\x81\x6b\x65\xf1\x6b\x59\x73\x56\x19\x42\x49\x31\xa0\x3a\xcb\x30\x5e\xaf\xc1\x34\x8e\x45\xb1\xe9\x24\x3f\x1a\x26\x70\xd1\xed\x3a\x49\x27\xfe\xd1\x76\x24\x3a\x65\x5e\x33\x2c\xe1\x1e\x2b\x7e\xbe\xfe\xf0\xcb\x63\xf4\x8f\x43\x27\xec\xf7\x97\x30\x29\x2a\x45\xe6\x47\xcc\x99\x0f\x95\x82\x27\x91\x2e\x26\xb0\x88\x44\xe2\xaf\x9c\x52\xdc\xa9\x49\xf0\xa2\x4a\x8f\x1a\x3b\x93\x21\xf5\x8b\x2f\x49\xaa\x7a\x5a\x82\x61\xe3\xa6\x52\x75\xcc\x98\x60\xfc\x8b\x12\x8c\xc6\xde\x83\x89\x6f\xc2\xc3\xe2\xe7\x10\xd6\x69\xdc\x13\xb3\x99\x42\xdd\xbb\xb8\x0f\xe8\x69\xae\xb5\xe0\xe5\x66\x25\x51\xe1\x66\xb7\x9a\x6a\x0e\x53\xcd\x7b\x94\xcf\x44\xbd\x23\x39\x96\x4d\x06\x7e\x72\x53\x5c\x0a\x3a\x61\x8f\xd1\xa8\xf2\x69\x4a\xf7\x55\xaa\x3c\x8a\x50\xa9\x60\xfb\xe4\xfa\x50\x35\x8f\x5f\xaf\x71\x68\x00\x6f\x3d\x2f\x36\x5e\x5b\x2e\x0b\x5a\xcf\xfc\xf7\x24\xc2\x51\x4e\xfc\xff\xcc\x85\x26\x7f\x1c\xf6\x1f\x73\xd8\x37\x7c\xa6\x92\x7c\x75\xd0\x95\xbb\x72\x82\x06\x92\xd1\xc5\x60\x90\x2d\x5f\x6f\xee\x82\x7c\xb3\x0f\x00\xb5\x01\x9a\x51\xa5\x7b\x94\x33\xca\x11\xee\x68\x3c\x47\xfd\x45\x13\xc6\x56\xad\x7b\x85\x07\xa4\x2d\x86\xec\x01\x5b\x6f\xb3\xea\xa7\x82\xeb\x64\x27\xc3\x28\x9f\x83\x75\x1b\x32\x94\x30\x7c\x01\x89\xc8\xa5\x19\x53\x51\x67\x5f\xfb\x06\xe1\x55\x15\x89\xdc\x40\x3d\xc6\xb4\x52\xf7\x91\xe5\x92\x30\x08\x9e\xf7\x67\xd5\x7d\xd4\x66\xac\x02\xe8\xa7\x64\x39\x7c\xf1\xb3\xc8\xa5\xbd\xb2\xea\x03\xa7\xac\xfe\xdb\x21\x1a\xa3\x30\xbd\x7c\x88\x65\xe3\xb0\x05\x25\x7f\x20\xd6\xd4\xa3\x2f\xc0\x07\xb2\x04\xb3\x39\x81\x24\x1a\x8f\x8b\x76\xa8\x30\x12\xa6\xa0\x36\x40\xaf\xbf\x19\x78\x0d\xb0\x9f\x88\x46\x0f\xf2\x35\xe9\xf8\xb8\x1f\x28\x02\xf7\xa6\xfb\x7e\xad\xfe\x3d\x95\xe4\x2b\x4d\x34\x55\x9a\x46\xea\x8f\xba\xfc\xbf\xd4\x65\xa5\x89\x56\x7b\x75\xf9\x87\x61\xb3\x2e\xb7\xe8\x3c\xb8\x91\xd7\xe7\x8b\xc6\xe8\xa4\xf1\x2b\xc5\xad\xb2\x3f\x50\x80\xeb\xaa\x8d\x15\x34\x32\x07\x10\xe8\xba\xf1\xbf\x3e\xfd\x02\x41\x18\x13\x95\x4c\x05\x91\x71\x48\x94\x42\xad\xc2\x05\xf2\x58\x48\x15\x96\x37\xbb\x42\x86\xb7\x8d\x97\x7e\x4a\x79\xdf\x48\x9e\x11\xa6\xf0\xf4\x5b\x14\x60\x94\x10\xa9\x95\x11\x5f\x0e\x3d\xc2\x4f\xc6\x2a\x92\x34\xab\xae\x27\x48\x96\x31\x1a\x11\x73\x72\x0a\x6f\xc9\x82\x38\x62\x89\xfe\xb3\x6e\x2c\xa2\x3c\x45\xae\x4f\xfb\x12\x49\xbc\xea\xce\x72\x6e\xef\xac\xa1\x7b\x0a\xeb\x1a\x51\x77\x7a\xeb\xa3\x94\x42\xaa\xca\x83\x92\x20\x09\x9f\x23\x3c\xa3\x3c\xc6\xe5\x19\x3c\xb3\x3c\x30\x9a\xf8\xb8\x39\xde\xc1\xc7\xbf\x0b\x4d\x67\xab\xee\x7a\x6b\x05\x6d\x5a\x8d\xa0\xf3\xce\xcc\xe9\x9c\x6d\xd3\x70\xa9\x47\xd0\x59\xaf\x2b\xe1\x45\xb1\xcb\xb1\xca\xcc\x64\xf4\x4c\x4e\x68\x8c\x23\x87\xce\x36\xc1\x04\x17\xe5\xf3\x11\x74\xa6\x42\x68\xa5\x25\xc9\x2e\x3a\x35\x47\x71\xfa\xba\xe1\x23\xf2\x78\xdb\xe7\x2a\x76\x76\xf0\x49\xeb\x43\xc7\x23\x5c\x7e\xcf\x67\xe2\xa0\xc7\x0d\x91\x7e\x9f\xcb\x3e\xfa\x18\x5e\xef\x79\xf9\xac\xdb\xf9\x53\xfd\xe3\x46\xe7\xb4\xef\x5a\xfb\x03\x21\x63\x9e\x05\x91\x80\x0c\x26\xf0\xac\xab\x13\xaa\x4e\x5f\x6f\x77\x53\x74\x06\x5d\x64\xfd\x98\x68\xd2\xed\xd8\x7c\xe9\x9c\xee\x8a\x30\x0f\xb2\x4a\x55\xc3\x3e\x6b\xef\xb6\x3c\x89\x3a\x97\xdc\xb9\xfd\x7a\xcb\xa9\x93\xa6\x45\xb6\xfd\x79\x6b\xd2\x07\x26\x50\xe5\x11\xe5\x54\xd7\xc9\xd0\x9f\xa3\x7e\xc7\xd0\x0c\x7f\x5c\xbd\x8f\xbb\x1d\x3b\xa5\x73\x7a\x56\xb1\x5f\x27\x98\x62\xc3\x98\x8d\xc8\xbe\x42\xfd\x0f\x7b\x4f\xb1\xbb\xdc\x42\x30\x4d\xb3\x91\xc7\x3f\x2d\xe9\x7c\x8e\x72\x04\x1d\xaa\x31\xdd\x59\x4a\xf3\x98\xa3\x0b\xd1\xda\xb0\x04\xeb\x69\x31\x82\x75\x54\x40\x77\x1d\x17\xcf\x4f\x83\x6d\x40\xce\xf6\x74\x4e\xc5\xd2\xa7\x53\x25\xe2\x6e\x04\x5a\xe6\xe8\x51\x87\x44\xe7\x12\x7d\xd3\xec\x54\xb2\xc0\x37\xea\x7d\x4a\xe6\x07\x59\xee\xd3\x50\x1b\x58\xe6\xc0\x66\xe7\x24\x8b\xb2\x31\xf2\xc0\x50\x3d\x9c\xa4\x66\x92\x5b\x14\x2f\x57\xb1\xf7\xb5\x68\xc3\x49\xa1\xa4\xa8\x46\xf0\xd9\xb3\x36\x2e\xcd\x32\x8a\x1e\x83\x24\x89\x69\x6e\xe6\x75\x2e\x5e\x3e\xef\x9c\x41\xe7\xe5\xcb\xe7\x9d\x9b\x7d\x3e\x7b\xa3\x72\x08\x2b\x6e\x16\xf7\x20\x15\xb6\x90\x7c\xa8\xb3\xfb\x26\x98\x24\x1b\xc1\x67\xaf\x80\xb5\x3b\xfa\x8f\xa0\xbc\x3c\xd1\x50\x14\x67\x15\xca\xcd\xd3\x43\x79\x0d\xd0\xf1\x29\xd8\x13\xb4\xf9\xe5\xdc\x27\xed\x53\x45\xad\x45\xee\x49\xbc\xd9\x5e\xb2\x9b\xc3\x19\x6d\xfb\x85\xc7\x65\xb4\x9d\xd2\x92\xd1\x1b\x91\xad\x19\xfd\xfd\x66\x97\x03\xe8\xff\x91\x5d\x65\xe5\x83\xf6\xd2\x47\x96\x74\x77\x17\x33\x8f\xf9\xfc\x51\x50\xae\x51\x7a\x05\x40\x99\xa3\x60\x4c\x4e\x48\x2c\xee\xf6\x6d\x6e\xb5\x8e\xe1\x1c\x79\xec\x13\x6d\x53\xe6\xf3\x06\xbd\xbf\x21\xa3\x0b\x5b\x29\x2a\x0c\x37\xb4\x1f\x45\xce\x23\x1f\xe1\xad\x48\xed\x6d\xbb\xf6\xd0\x3e\xe1\x2d\x46\x35\xe1\xa6\xcd\x4a\x63\xcb\xaf\x42\xa4\x8f\x0d\x36\xa5\x89\xd4\xff\x76\x49\x69\xfb\x09\xbb\xac\x57\xe6\x6b\xff\x27\xbb\xab\x40\x30\x1c\x0c\x5e\xf5\x06\xe7\xbd\xc1\xf0\xfa\xfc\xe5\x68\xf0\x62\x34\x78\xf9\xeb\xe0\x87\xd1\x60\x60\x9a\xe1\x4e\x9b\x55\xcb\x37\x4b\xaa\xbc\xcb\xea\xaa\xa6\xa6\x29\xb6\x0a\x58\xf9\x04\x3c\xbc\x38\xef\x16\x95\xfd\x15\x3a\x64\xd9\x94\xec\x36\x8a\xb0\x29\x92\xfb\x4d\xad\x41\xcd\xf6\xb4\x16\x3e\x28\x0a\xd7\xf0\x39\xba\xa9\x6f\x75\xb7\x64\xe3\xc5\xf2\xf7\xaf\x69\x8a\x4a\x93\x34\x7b\x20\xd2\x67\xf5\xcc\xd2\x8f\xd5\x1b\xad\x31\xcd\xac\xc2\x9b\x5a\xc3\x6e\x9c\xdc\x0f\xcb\x4e\x70\x3e\x4d\x4c\x4a\x27\xbe\x11\x8a\xfd\x74\x7c\x9a\x68\x6c\xfc\xf8\x46\x40\xb6\x6b\xd0\x13\x45\xa3\x74\xa2\x0d\x8a\x9b\xbd\x43\x8e\xf9\x3f\x0e\xdd\x71\xb8\x71\x35\xf0\xdf\x00\x00\x00\xff\xff\x5b\xed\xe0\x80\xb5\x28\x00\x00")

func templatesViewsSesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsSesHtml,
		"templates/views/ses.html",
	)
}

func templatesViewsSesHtml() (*asset, error) {
	bytes, err := templatesViewsSesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/ses.html", size: 10421, mode: os.FileMode(420), modTime: time.Unix(1522927451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsSnsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\xeb\x6f\xdb\x38\x12\xff\x9e\xbf\x62\x4e\xc9\x41\x32\x60\xcb\xbb\xe9\x16\xd8\x73\x6d\x03\x41\x9b\xbb\x0d\xd0\x2e\x16\xdb\xec\xa7\x45\x51\xd0\xe2\xd8\x62\x2a\x93\x3a\x92\xb2\x9d\x33\xfc\xbf\x1f\x48\x49\x36\xf5\xf0\x2b\x49\xef\x51\x54\x1f\x12\x89\x1a\xce\xfc\xe6\x3d\x94\xd7\x6b\xa0\x38\x65\x1c\xc1\x8b\x04\xd7\xc8\xb5\x07\x9b\xcd\xc5\x90\xb2\x05\x44\x09\x51\x6a\xe4\xa5\x64\x86\x3d\xcd\x74\x82\xde\xf8\x02\x00\xc0\x7d\x69\xd7\x3f\x27\x38\xd5\xc5\x4b\x4b\x10\xbf\x1a\xaf\xd7\xc0\x7e\xfc\x99\x83\x77\x33\x27\xff\x12\x1c\x3e\xb2\x79\x9a\x20\xfc\x2a\x34\x9b\xb2\x88\x68\x66\xd6\x50\x2e\x58\x84\x1e\x84\xb0\xd9\x0c\xfb\xf1\xab\x82\x7f\x9f\xb2\xc5\xf8\xa2\xf8\x57\xc1\x12\x25\x48\xe4\x94\xad\xbc\x71\xdb\xdb\xd5\xe7\x94\x70\x4c\x5a\x60\xae\x3e\xbb\x0a\xe4\x18\xaf\xc7\x43\x56\xbe\x9f\x12\x98\x92\x5e\xa6\x50\x2a\xc3\x9a\x8d\x61\x8b\xbf\x00\xa9\xb6\x28\xaf\x1d\x26\x59\x52\x72\xe0\x64\x01\x9c\x2c\x26\x44\xf6\x24\x9b\xc5\x1a\x2c\x94\xcf\x5a\x88\x64\x22\x56\x8e\x60\xbb\x2f\x61\xe3\x21\xd9\x2a\x25\x92\x84\xa4\x0a\x7b\x09\xe3\x5f\xbc\x06\xaa\x28\xc6\x85\x14\xbc\x97\xa5\x39\xb4\x61\x9f\x8c\x87\xfd\x84\x39\x30\xfa\x59\xe2\x3c\x1d\xb2\x97\x63\xdf\xa6\x8d\xca\x08\x70\x78\x69\x32\x49\x70\xeb\x6c\xfb\x60\xff\xf6\x94\x96\x2c\x45\x0a\x94\x68\x62\x57\xea\x2a\xea\x18\x09\xad\xaf\xc9\xea\x42\x41\xe8\x04\x4b\xa4\xd9\x02\x41\xd5\x6c\xae\xe3\x1a\xa3\x7e\x9d\x93\xa1\x69\x91\x37\x11\xf4\xb1\xba\xb6\x5e\x83\x24\x7c\x86\x70\xc5\xc9\x1c\xbb\x70\x55\xc8\x82\xc1\x08\xc2\x52\xae\x49\x81\x13\x80\x53\x03\xdc\xf2\xc9\x51\xd6\xc5\x37\x50\xae\xd7\x80\x9c\x36\xb8\xf7\x6b\x38\x87\x7d\x6b\xd1\xa3\xd9\xf0\x55\xe2\xfd\x26\x4d\x93\x22\x41\xff\x97\x63\xbe\x60\x59\x6e\xa3\x52\xa4\x54\x2c\xb9\xd7\xe2\x27\x02\xb1\xc4\xe9\xc8\xbb\xf4\xea\xd4\x3d\x2d\x66\xb3\x04\x3d\x1b\xc5\xc5\x83\xc3\x0b\xa4\x30\xcf\x93\x4c\x6b\xc1\x3d\x20\x92\x91\x1e\xae\x52\xc2\x29\x52\x83\x34\x51\xd8\x84\xbe\x94\xc8\xa3\x78\x07\xbb\x89\x67\x67\xc0\x2d\x8e\x39\xf2\xac\x14\x67\xef\x9b\xdb\x4a\x1b\xb6\xbe\xa8\xe8\xf9\x40\x16\x44\x45\x92\xa5\x7a\xb0\x10\x8c\x06\x3f\x74\x3c\x60\x74\xe4\x11\xc7\xb3\xbd\x2c\xa5\x44\x97\x9a\xe7\x0f\xb2\x4a\xb2\x07\xc3\x56\xdc\x56\xef\x59\xf2\x98\xc6\x2c\x12\x1c\xb6\x77\x3d\x89\x53\x89\x2a\xae\x07\xd7\x1f\x85\xd4\xb0\x9e\x03\x15\xce\x6d\x56\xcb\x5f\xb4\xe9\x5f\xad\x7e\x4d\xba\x97\xaf\x8e\x27\x94\xc7\x58\x2c\x50\x56\x4b\x65\xd3\x09\x27\x94\x4c\xa8\x57\xc8\xbb\x9b\x0f\xfb\xaa\x62\x83\xd6\x49\x65\xb8\xf9\xfd\xd7\x93\xf7\xbd\x45\x59\x74\x69\x04\x5c\xa5\x4c\x5a\x16\x27\x6f\xbf\xe5\x34\x15\xcc\x4c\x12\x27\x6e\x78\x4f\x94\x86\xcc\x09\x8d\xd6\x8a\x7f\x6e\x7d\x67\x5d\xb8\x72\xac\x6d\x0b\xbc\x6b\xfd\x96\x22\x0f\xeb\x35\x9b\x02\x17\xba\xb2\x33\xbc\xe5\xc6\x8f\x74\xb3\x29\xd3\xd6\x08\x90\xde\x7a\x8d\x9c\x6e\x36\xad\x9d\x61\x1b\x13\xb8\xd2\xbd\x08\xb9\x46\xb9\x27\x9f\x8c\x15\xa6\x55\x79\x77\xea\xee\xe6\xc3\xbe\x0c\x19\xaa\x94\xf0\x43\xa9\x27\xbe\x78\xa0\xf4\xa3\x29\x25\x91\x48\x84\x1c\xc0\xe5\xeb\x68\xf2\xf3\xeb\xc8\x84\xb9\xd9\xbc\x17\x07\x26\x0a\x9f\x2c\x56\xe2\x5c\x2c\xb0\x21\x9a\xfe\xed\xf5\xab\x9f\xa6\xc7\x45\x37\xdb\x22\xe4\x6e\x6f\x4d\x88\xbc\xf3\xba\x36\xbb\x91\xbc\xb5\x09\x97\xf4\xa7\xda\xde\x89\xfd\xdb\x6d\xe8\xbf\x33\x99\xb0\xc7\x30\x75\x20\x4f\x61\x70\xb6\xf6\xed\x2e\x72\x87\x76\x29\x66\x12\xd5\xa1\x22\xde\x46\xde\x9b\x10\x09\xee\x43\x4f\x65\x51\x64\xf8\x94\x7e\x9d\x33\xde\x5b\x32\xaa\xe3\xc1\x35\xce\xdf\xe4\x77\x75\x13\xfc\x03\x75\x91\x32\xbf\xa1\x34\xc1\x0f\x9b\xcd\x5f\x8f\xb4\x93\xfd\x3c\xde\x8a\xcc\x72\x38\xd0\x2f\xb6\x15\xfb\xe9\x7a\x2e\x89\xe4\x8c\xcf\xce\xd5\xf3\x1d\x53\xcf\x57\xb4\x64\xf2\x1c\x4d\xf7\xbc\x3a\x3d\x81\x4c\x11\xce\xdb\xf3\x37\x34\xcc\xde\x8b\x94\x45\xdf\xc7\xd8\x6f\x6a\x8c\xd5\xd6\xa7\x7b\x06\xd8\xfc\xe5\xf7\xd1\xf5\x05\x0f\xf6\xbb\xbb\x5e\x64\x0a\x54\x63\x92\x79\xda\x51\xdf\xa6\xe6\xa1\xb1\xf4\x45\x0e\xf9\x66\x08\xb4\x31\x61\xc7\xbf\x3c\x3a\xce\x3a\xdd\xdb\x2d\xa1\x05\xbb\x6f\xc4\xf8\xff\x2c\x8d\x1f\xb3\x49\x9e\x5d\xdf\x0f\xfa\xdf\x5a\x85\x54\xae\x6b\xf7\x14\xca\x0a\xcd\xf7\x7a\xf9\xdf\xae\x97\x50\x2f\x8f\x6e\x7a\x9e\x75\x78\x3f\x76\xfa\x7e\x62\x11\x75\xe3\x25\xff\x56\xea\x06\xd0\x59\x25\xd5\xdd\x19\xba\x7a\x1e\x3b\xc3\x35\x36\x97\xba\xfe\xc7\xca\xf2\x8e\xc3\x85\xf3\xcb\x89\xb1\xa7\x57\xb2\x5d\xaf\x41\x69\xa2\x59\xf4\xcb\xfd\x87\xf7\x10\xe4\xf7\x7f\xfc\xfe\x1e\xbc\x3e\x25\x2a\x9e\x08\x22\x69\x9f\x28\x85\x5a\xf5\x17\xc8\xa9\x90\xaa\xbf\x8d\x18\x15\x72\xd4\xbd\x89\xea\x47\x2a\x5f\xbd\xcf\x57\x27\x42\x68\xa5\x25\x49\xc3\x39\xe3\x61\x64\xce\x63\xb6\x2a\x75\x5e\x50\xea\x94\xad\x90\x1a\x55\x50\x96\x08\xec\xd2\x2f\x76\xe9\x30\x84\x76\xbb\x3c\xa8\x17\xb4\x4a\xff\x41\xf5\x1f\xfe\x99\xa1\x7c\x0c\x1d\xc3\x18\x2c\x0f\x5f\xc3\x1a\x13\x65\x04\xee\x75\xc1\x57\x91\xe9\x78\xa0\x26\xdc\x75\x44\x53\xfc\xc5\x30\x4f\x09\xd0\x8f\x29\x56\x3e\x31\xf6\x77\x2d\xa2\x28\x42\x57\x01\x15\x51\x36\x47\xae\x3b\xa1\x44\x42\x1f\x83\x69\xc6\x23\x9b\xd5\x41\x07\xd6\xdb\x24\xb8\x0a\xfc\xcb\x96\x0f\xc6\xdd\xcb\xca\xf8\xdd\xbd\x6c\xeb\x35\x7e\x27\x8c\x12\x16\x7d\xd9\xb2\x0e\x3a\xeb\x4a\xca\x5d\x85\xa9\x50\x3a\xf0\x2f\xfd\x2e\xac\xfd\xa2\x27\xf9\x03\xb8\x0a\x74\xcc\x54\xc7\x3a\x38\xd8\xae\x77\x36\x5d\xd8\x71\x82\x75\xa3\x36\x2c\x19\xa7\x62\x19\x26\xa2\x38\xca\x4a\x4c\x04\xa1\x41\xe7\x4d\x85\x72\xd3\x79\x73\x51\x59\x90\xa8\x33\xc9\x73\x3b\xee\x48\x2b\x64\x57\xe1\x94\xef\xc2\xed\x76\xa5\x43\x32\xe5\x7f\x67\x89\x46\xc9\xf8\x2c\x4c\x33\x15\x07\x15\x9e\x5b\x9c\x0a\xb5\x66\x7c\xa6\xba\xb6\x1d\xe4\x7f\xef\x38\xc5\x55\x17\xa4\x58\x76\xa1\x68\x0d\x9d\xa6\x36\x6c\x0a\xdb\xdd\xa1\xb2\x82\xef\x28\x8c\x46\x23\xf0\x5d\x87\xf8\x6d\x96\x30\xd7\x82\x48\x58\xc0\xc8\x7a\x30\x42\xa9\x7b\x0a\x13\x8c\xb4\x90\x7e\x27\x5c\x90\x24\xa8\x9b\xc1\x95\xbb\xc8\xe5\xd8\x8f\xbe\x48\xf7\x8a\x28\xc9\xff\x22\xc5\xf2\xcf\xeb\x4f\x61\x82\x7c\xa6\xe3\x43\xd4\xfb\xed\x5d\xbf\x36\xed\xe8\x4a\xcd\x28\x8c\xe0\x1d\xd1\x18\xa6\x44\x2a\x0c\x72\x00\xfb\x54\xda\xe2\xa4\x5f\x1d\x5b\xc1\xc0\x42\xe3\x62\x19\x74\x60\x3c\x02\xda\xce\xaa\x39\x0f\xb5\x30\x2e\x18\x6a\x99\xe1\x45\xfb\xe6\x4a\xa0\xd6\xd2\xd5\xef\x84\xef\xca\xb0\x0d\xaa\xaa\x27\x84\xcf\x32\x32\xc3\x41\x8b\x49\x32\x99\x0c\xc0\x77\x0a\xd6\xae\x42\xf5\xcd\x78\x11\x3e\x28\xc1\xfd\x2a\x9e\x6e\xe5\x31\x12\x49\x36\xe7\x6a\x00\x7f\x36\x98\xb7\x7b\xc0\x48\x18\xc0\x0f\x4d\x93\x74\xcf\x62\xf0\xe3\x73\x19\x5c\x37\xc9\xc1\xba\x81\x53\x94\x03\xd8\x55\x49\x53\x94\x8e\x25\x86\xa1\x39\x2f\x2b\xcc\x8e\x7b\xf1\x51\x9b\xba\x92\x8b\x78\x4e\x18\xfa\xfe\xa9\x81\x77\x9e\x91\x5e\xb5\x1b\x49\x48\x8a\xd2\x44\xc9\x20\xcf\xa0\xe7\x8a\xf9\xe9\xa5\x7c\x71\xa6\x71\xdb\x12\xd3\x7d\xfa\x54\xc5\xc5\x38\xd3\x6f\xc5\x3c\x4d\x50\xa3\x8b\xaa\x0d\x91\x69\x6c\x21\x49\x59\xd0\x09\x8b\x14\x09\x4c\xe1\x0a\x71\x81\xf2\x31\x38\xd8\xde\x20\x2f\x7d\x7b\x95\xcc\xf9\xc1\xc8\xca\x68\xb7\x9c\xb9\xf2\x36\x90\x37\x86\x61\xf1\x50\x7c\xec\x9e\x26\x82\xe8\x81\x3d\xda\xe7\x27\xc8\x4a\xdf\xb0\x3f\xde\xd8\xfb\xb1\xdf\x39\x18\xcb\x21\x49\x53\xe4\xf4\x5e\x04\x57\x41\x8e\x2a\xcc\xc7\x99\xa0\xd3\x39\xb2\x53\xf0\xc0\x8f\x62\x73\xde\xf0\x8f\x74\xfb\x76\xf5\x43\x85\x44\x46\x71\xe0\xfb\x5d\x5b\x33\xbb\xc5\x7c\x14\x52\x49\x96\xf5\x51\xa0\x7e\x6d\x4e\x01\x67\x26\x1a\x17\xdb\xc1\xc0\x2b\x2f\x0c\x95\x16\xe9\x6f\x52\xa4\x64\x46\x72\x95\x8e\x41\xd9\xd3\xcb\x72\x0f\x14\x16\x0e\xfc\xa1\xc8\x8f\x62\x0b\x92\x64\x66\xe6\x4b\x12\xcf\x39\x3c\xc6\x62\x09\x66\xa9\x38\x03\xe6\xb4\x63\x7f\x8f\xec\xc3\xac\x8b\x61\xc0\x61\x7f\x5b\xac\x1c\xe7\xbe\xa9\xcf\x60\x17\xf5\x37\xe6\xff\xb0\x9f\x8f\x90\xce\xf9\xea\xdf\x01\x00\x00\xff\xff\x51\x9e\x11\x31\x98\x26\x00\x00")

func templatesViewsSnsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsSnsHtml,
		"templates/views/sns.html",
	)
}

func templatesViewsSnsHtml() (*asset, error) {
	bytes, err := templatesViewsSnsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/sns.html", size: 9880, mode: os.FileMode(420), modTime: time.Unix(1522924965, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesAwsMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xcd\x8e\xd3\x30\x14\x85\x4f\xf9\xd9\x64\xc9\x9a\xc5\x65\xc1\x08\x04\x1e\xec\x84\x91\x46\x6e\xdc\x01\x86\xa9\x84\x68\x44\xa9\x52\xf6\x56\x63\xd2\x88\xc4\x8e\x6c\x87\x1f\xa9\xaf\xc1\xeb\xf0\x28\x3c\x0b\x4a\x0a\x8c\x7a\x56\xe7\xd3\x3d\xf7\xe8\xea\xfe\x7e\x70\xef\x27\x00\xdc\x01\xf0\x10\xc0\x73\x00\xf7\x01\xe4\x38\x6a\x0d\xe0\x2e\x80\x8f\x00\xf6\x33\x60\xfb\x97\x7f\xcd\x80\x19\x4e\x35\x76\xe0\xf5\xb7\x80\x8d\xe9\x9d\x8f\xac\x08\x75\x53\xb1\x37\x43\x1d\x58\xe9\x24\x55\xe6\xeb\xab\x2f\xcd\x5e\x77\xee\xdc\x0f\xc9\xfa\x43\xc9\xae\xbd\xd1\xb1\x71\x96\xbd\xd5\xd1\x48\x4a\xb9\xb8\x64\x3c\x63\x69\x46\x69\x26\x2f\x2e\x9e\xf1\x8c\xf3\x64\xa5\x43\x64\xa5\xd7\x36\xb4\x3a\x3a\x2f\xe9\xfd\xd4\x41\xc5\xe0\x75\xe7\x2a\x47\xf9\x49\xf1\x22\x59\x69\x5b\x0f\xba\x36\xac\x34\xba\x93\xf4\x9f\x25\x6d\x86\x10\x1a\x6d\x93\xe2\x5d\x71\xc3\x3e\x19\x1f\x1a\x67\x25\x89\x73\x9e\x5c\x3b\x1b\x8d\x8d\xac\xfc\xd1\x1b\x49\xd1\x7c\x8f\x2f\xfa\x56\x37\x76\x4e\xbb\xbd\xf6\xc1\x44\xb5\x2d\x97\xec\xf2\x36\x37\xde\xf3\xd9\x78\x76\x63\x77\xae\x6a\x6c\x2d\x29\x59\xb7\x83\xd7\x2d\x5b\x3a\xdf\x05\x49\xb6\x9f\x30\xa8\x6c\x4e\x47\xab\xec\x63\xc1\x95\x12\x74\x76\x46\xa3\xe5\x8f\x94\x10\x74\x45\x9c\xe4\xc4\x0b\x95\xfe\x1b\xe5\xea\xe5\x68\x9f\x4c\xb1\x5c\x70\x3a\x1c\x8e\x2b\x0b\x95\xf2\xa7\x74\x45\x82\x24\xa5\xf3\xe9\xd9\x7f\x02\x00\x00\xff\xff\xd1\x46\x42\x1d\xc2\x01\x00\x00")

func localesRuLc_messagesAwsMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesAwsMo,
		"locales/ru/LC_MESSAGES/aws.mo",
	)
}

func localesRuLc_messagesAwsMo() (*asset, error) {
	bytes, err := localesRuLc_messagesAwsMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/aws.mo", size: 450, mode: os.FileMode(420), modTime: time.Unix(1522927452, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesConfigMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x4d\x6f\x1b\x55\x14\x3d\x76\x6c\x3e\x0c\xe5\x1b\xa9\x0b\x90\x6e\x17\x8d\xf8\x9a\x32\xb6\x5b\x51\x4d\xe2\xb4\xa5\x49\x45\x44\x0c\x55\xe2\xc0\x02\x09\xe9\x61\xbf\x38\xa3\xda\x33\xa3\x79\x33\x15\x95\xba\x70\x1c\x04\x0b\x2a\x8a\x40\x08\x36\x20\x10\x7f\xc0\xa4\x31\x72\xe3\xc4\x61\xcf\xe6\xbe\x05\x5b\xfe\x00\x3b\xb6\xb0\x40\x6f\xc6\x36\x42\x56\x25\xc0\x9b\xb9\x1f\xe7\x9c\x77\xef\x79\xcf\xbf\x3e\x91\xfb\x02\x00\x1e\x01\xf0\x0c\x80\x5b\x00\x9e\x04\xf0\x27\xd2\xdf\x6b\x19\xe0\x71\x00\xab\x19\xe0\x29\x00\xef\x64\x80\x97\x00\x04\x19\xc0\x02\xf0\x75\x06\x98\x07\xf0\x73\x06\x78\x0c\xc0\xef\x19\xe0\x24\x80\xb9\x2c\xf0\xb4\xd1\xcc\x02\x27\x00\x94\xb2\xc0\xb3\x00\x2e\x66\x81\x02\x80\x77\xb3\x29\xce\xcd\x02\x8f\x02\xe8\x66\x81\xed\x0c\xf0\x59\x36\x9d\xe3\x8f\x39\xe0\x2c\x80\x93\x39\x60\x05\x40\x35\x07\x5c\x02\xf0\x79\x0e\x78\x05\xc0\x2f\x39\xe0\x34\x80\x13\x79\xe0\x14\x80\x72\x3e\xd5\xdf\xcc\x03\x0f\x03\x50\x79\x60\x01\x40\x27\x0f\xcc\x01\x38\xcc\x03\x2f\x00\xf8\x29\x9f\xee\xf1\x5b\x1e\xc8\x00\x78\x68\xbc\xa7\x99\x69\x6e\x1c\x1b\xfe\x03\x48\xe7\xce\x01\x78\x70\x5c\xcf\x8f\xbf\xf7\x8f\xbf\xc6\xb3\xfb\x00\x64\x4d\x52\xf7\xbd\x2d\xb7\x99\xbb\xf4\xf6\x06\xa5\xe1\xb4\x52\xaf\x4b\xa5\xe8\x9a\xbc\x41\xab\xcb\x93\xe2\x72\x1c\x8a\xc8\xf5\x3d\xda\xf2\x43\xda\x78\x63\x83\x44\x10\xb4\xdc\x7a\x52\x53\x14\x07\x0d\x11\xc9\xf0\x9e\x60\x15\xbf\xa7\xea\xa1\x1b\xfc\x3b\x74\xe4\x07\x6e\x7d\x06\xb6\xe6\x37\xa9\x25\xaf\xcb\xd6\xa4\x50\x15\x6e\x8b\xb6\x42\xbf\x4d\xa2\xd1\x08\xa5\x52\xb3\x0d\x4f\xb4\xe5\xa4\xba\x2e\x9b\xae\xef\x4d\xb3\xd8\x9b\x1c\x40\xbe\x47\x2a\x12\x61\x14\x07\x93\xee\xc6\xca\xc6\x34\x94\xf5\x50\x46\x24\xa6\xa6\x4c\x1a\x9b\x29\x5b\x61\x5d\x06\x7e\x18\x59\x55\xd5\x74\x1b\xd6\xab\x71\x53\x59\x35\xdf\xa1\x86\xbc\x7e\xf1\x9a\xbb\x2d\xda\xfe\x99\x30\x2e\x5c\x7d\xb3\x66\x5d\x0e\x65\xb2\xa7\xb5\x2c\x22\xe9\x50\xc9\x2e\x9e\xb7\xec\xb2\x55\x2a\x53\xa9\xec\x9c\x3b\xf7\xa2\x5d\xb6\xed\xc2\x9a\x50\x91\x55\x0b\x85\xa7\x5a\x22\xf2\x43\x87\x5e\x4f\x34\xa8\x1a\x87\xa2\xed\x37\x7c\x5a\xfc\x87\xf0\x52\x61\x4d\x78\xcd\x58\x34\xa5\x55\x93\xa2\xed\xd0\x34\x77\x68\x3d\x56\xca\x15\x5e\xa1\xba\x5a\x5d\xb1\xde\x92\xa1\x72\x7d\xcf\xa1\xe2\x19\xbb\x70\xd9\xf7\x22\xe9\x45\x56\xed\x46\x20\x1d\x8a\xe4\xfb\xd1\xcb\x41\x4b\xb8\xde\x02\xd5\xb7\x45\xa8\x64\x54\xd9\xac\x5d\xb1\xce\xff\x8d\x33\xf3\x6c\xc9\xd0\x5a\xf1\xea\x7e\xc3\xf5\x9a\x0e\x15\xae\xb6\xe2\x50\xb4\xac\x2b\x7e\xd8\x56\x0e\x79\x41\x92\xaa\x4a\x79\x81\xd2\xb0\xe2\x9d\x2e\xda\x95\x4a\x91\xe6\xe7\xc9\x84\xf6\xa9\x4a\xb1\x48\x17\xc8\x26\x27\xc9\x97\x2a\xa5\x49\x6b\xb1\x72\xd6\x84\xcf\x25\xb0\xc5\xa2\x4d\x37\x6f\xa6\x94\xa5\x4a\xc9\x7e\x9e\x2e\x50\x91\x1c\x2a\x2d\xc0\x3c\x55\x3e\xe0\x11\x1f\xe9\x0f\x78\xc0\x77\xf4\xae\xee\x70\x4f\x7f\xc8\x03\x7d\x1b\xfc\x15\xef\x73\x9f\x8f\x74\x97\x07\x49\xfb\x80\x7b\xba\xcb\x23\xdd\x31\x9c\xa1\xfe\x44\x7f\xc4\x3d\xe2\x7d\x1e\xe9\x1d\xdd\xd5\xbb\x7c\xcc\x3d\x43\x32\x84\xbe\xee\xf0\x1e\xf7\x78\x48\x3c\xe2\x1f\xf8\x88\x47\xbc\xc7\x43\xa3\x66\xa4\x0d\x69\xa8\x6f\x27\x4f\x93\x8f\x75\x87\x07\x3c\xe4\x11\xff\x98\xf6\xf9\xee\xff\x51\xe1\x11\xef\xf3\x31\x0f\xf4\x0e\x8f\xf8\xe0\xbf\x2b\x18\x30\x1f\x82\xbf\xd7\x9d\x04\x64\x16\xbf\x45\xc9\x5c\x77\x78\x30\x2e\xf6\x52\x1e\xf8\x53\xde\xd7\x1d\xee\xeb\x1d\xe2\x91\xee\x26\x3b\xf4\x78\x8f\x07\x89\xca\x30\x35\xef\xd0\x1c\x70\x8f\xee\xb7\xdc\x37\xb2\xc6\x79\xf0\x97\xdc\xe3\x63\xbd\xab\x77\x52\x87\xcd\xb1\x33\xc3\x72\x7f\xec\x14\x19\xb3\xb9\xa7\x3b\x46\x0c\xe6\x6f\xc5\xdf\x71\x9f\x0f\x92\x71\xba\x7c\xa4\x3f\xe6\xbb\xd3\xfb\x99\xb9\x9d\x6f\x66\x4d\xc0\x5f\x01\x00\x00\xff\xff\xf3\x10\x1f\x5b\x00\x06\x00\x00")

func localesRuLc_messagesConfigMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesConfigMo,
		"locales/ru/LC_MESSAGES/config.mo",
	)
}

func localesRuLc_messagesConfigMo() (*asset, error) {
	bytes, err := localesRuLc_messagesConfigMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/config.mo", size: 1536, mode: os.FileMode(420), modTime: time.Unix(1522927452, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesSesMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x4d\x6c\x1b\x45\x14\xfe\xba\x8e\x1d\x30\xe5\xaf\x14\x0a\x12\x52\x07\xa4\x56\xfc\x68\xdb\xb5\xd3\xa2\x6a\x5b\xb7\xa5\x3f\x51\x51\x63\x35\x24\xa6\xe2\xc2\x61\x6b\x4f\x9d\x05\x7b\xd7\xec\xac\xa3\x46\x2a\x52\x9c\x80\x00\x11\x09\x09\xf1\x23\x2a\x54\x08\x82\x03\x08\x21\xb7\x34\xaa\xeb\x24\x9b\x0b\x27\x4e\x6f\x8e\x5c\x10\x07\x4e\x48\x5c\xe0\xca\x01\xcd\xce\xe4\xc7\x2d\xf5\x61\xdf\x9b\x6f\xde\xfb\xde\xf7\xde\x1b\xff\xb6\x63\xe8\x13\x00\x78\x02\xc0\x93\x00\xfe\x00\xb0\x07\xc0\x0f\xdb\x90\xfe\x8e\x5b\xc0\x4e\x00\x2f\x5a\xc0\xd3\x00\xce\x5b\xc0\x30\x80\x19\x0b\xc8\x03\xe8\x58\xc0\x76\x00\x0b\xe6\xfc\xb9\x05\x0c\x01\xf8\xc6\xd8\xef\x2c\xe0\x7e\x00\x3f\x9a\xbc\x15\xc3\xf7\xb3\x89\xff\xd5\x02\xb2\xaa\xae\xb9\xff\xd3\x02\xee\x05\xf0\xb7\xc1\xff\x35\x3c\x56\x46\xdb\xe1\x8c\xce\xdb\x9e\x01\x18\x80\x5d\x06\x3f\x64\xf0\x52\x46\xf3\x9c\xc9\x00\x16\x80\xf1\x0c\x30\xb5\x0d\x98\xcc\x00\x8e\xaa\x3f\x04\xbc\x06\xe0\xaf\x21\xad\xfb\x6c\x56\xdb\x57\xb3\xc0\x2e\x00\x3c\xab\xf5\xbd\x95\xd5\xba\x3f\xca\x6a\xfe\xaf\xb2\x80\x0b\xe0\xdb\x2c\xb0\x03\xc0\xef\x59\xe0\x05\x00\xff\x64\xf5\xec\x9e\xcb\xe9\xfa\xa7\x72\xfa\xfe\x5c\x0e\x78\x08\xc0\x05\x63\x85\xc1\xdf\x36\xf6\xb3\x1c\xb0\x1b\xc0\xf7\x39\xe0\x18\x80\x5f\x72\xba\x6e\x7e\x58\xdb\xdd\xc3\xc0\x3d\x00\x0e\x18\x5b\x1a\x06\xcc\x4a\x06\x7e\x6a\x56\xbb\x8c\xaf\x78\x1f\x33\xbe\xd2\x32\x64\x7c\x35\x8f\x1c\x80\x87\xcd\x9e\x1f\x31\x78\x06\xc0\xa3\x00\x1e\x87\xee\x55\xe9\x54\xb3\xb0\xb6\xf0\x3f\x60\xec\x4e\x63\x95\x96\x07\xa1\x77\x73\x9f\x02\xf6\xec\xbb\xc8\x78\xd3\xf3\x1b\x9b\x9e\xd8\x74\xf7\x0b\x5e\x0d\x83\xda\x96\xbb\x75\xe4\x44\xd8\x0e\xaa\x5c\xe0\x64\xd8\x6c\x35\x3c\x3f\x88\x95\x1b\xc4\x3c\x88\x59\x3c\xd3\xe2\x38\xc5\x1b\xfe\x34\x8f\x7c\x2e\x30\x1a\x85\x4d\x9c\xa9\x94\xc7\x50\xf6\x2e\x31\xc1\x83\x1a\x8b\xbc\x98\xa3\xcc\x85\xf0\xea\x1b\x56\xdf\x88\x76\xb5\xca\x85\xc0\xb8\x22\x65\x31\xbf\x14\xe3\xe5\x76\x18\x7b\x98\xe0\xaf\xf3\x6a\x2c\x30\xa1\x74\x04\x7e\x50\xc7\x04\x17\x3c\xc6\xa4\x37\xcd\x31\xc9\x83\x5a\xfa\x31\xbd\x28\xd7\x0f\xea\xec\x4d\x95\xca\x5a\x3c\x62\xc5\x03\x6c\x2a\x6c\x47\xca\xf7\xc3\x34\x36\xc6\x64\xec\xc5\xbe\x88\xfd\xaa\xc0\x64\xfb\x82\xa2\x47\x25\xc4\x04\x6f\x85\x51\x6c\x97\x45\xdd\xaf\xd9\x27\xda\x75\x61\x57\x42\x97\xd5\xf8\xf4\xf1\x37\xfc\x29\xaf\x19\xee\x8b\xda\xf9\xf1\x73\x15\xfb\x64\xc4\xbd\xd8\x0f\x03\xfb\x94\x17\x73\x97\x15\x9d\xc2\x21\xdb\x19\xb1\x8b\x23\xac\x38\xe2\x1e\x3c\xf8\xbc\x33\xe2\x38\xf9\x31\x4f\xc4\x76\x25\xf2\x02\xd1\xf0\xe2\x30\x72\xd9\xd9\x94\x83\x95\xdb\x91\xd7\x0c\x6b\x21\x3b\x32\x40\x7c\x34\x3f\xe6\x05\xf5\xb6\x57\xe7\x76\x85\x7b\x4d\x97\x6d\x9c\x5d\x36\xd1\x16\xc2\xf7\x82\x7c\xf9\xa5\xf2\x69\xfb\x3c\x8f\x84\x1f\x06\x2e\x2b\xec\x73\xf2\x66\xf0\x76\x65\xa6\xc5\xdd\x74\x66\xfb\xd3\x9d\x1c\x66\xd5\x29\x2f\x12\x3c\x2e\xbd\x52\x19\xb5\x0f\x6d\xc6\x29\x3d\x17\x79\x64\x9f\x0e\xaa\xa1\x9a\x93\xcb\xf2\xe3\x8d\x76\xe4\x35\xec\xd1\x30\x6a\x0a\x97\x05\xad\xf4\x28\x4a\x23\x87\x99\x76\x4b\xc1\x9e\x82\x53\x2a\x15\xd8\xde\xbd\x4c\xb9\xce\x53\xa5\x42\x81\x1d\x63\x0e\x73\xd3\xf3\xd1\x52\x71\xfd\xea\x48\xe9\x80\x72\x9f\x49\xc3\x8e\x14\x1c\x76\xf9\xb2\x4e\x39\x5a\x2a\x3a\xcf\xb2\x63\xac\xc0\x5c\x56\x3c\x9c\x3e\x2a\x5a\xa3\x9e\xec\xc8\x05\x5a\xa1\xe4\x76\xa0\xbb\x05\xa0\x25\x5a\xb9\x23\x61\x7f\x8a\xf7\xe5\x3c\xad\xd2\x8d\x81\x70\x9d\x7f\xf7\x7b\x45\x77\xfb\x2d\x5d\x95\x73\xd4\xa7\x2e\xdd\x94\x1f\x80\x3e\xa5\x2e\x2d\x53\x42\xd7\xd4\xe1\x6b\xea\xd1\x1a\xa3\x3e\x25\xb4\x2a\xe7\x68\x29\xfd\x76\x41\x1f\x53\x22\x3b\xca\xa5\xeb\xb4\xac\x60\x4a\x52\x1a\x1d\xfa\x13\x25\xfa\xd9\xd3\x17\xd4\xa5\xbe\xec\x50\x4f\xa9\xa2\x65\xb9\x40\xab\xd4\x95\x1f\x32\xd9\x51\x81\x72\x56\xd3\xc8\x05\x46\x89\x9c\xa3\x35\x39\x9b\x32\xf6\xa9\x07\x5a\xa4\x24\x55\xf1\x7e\x4a\xdf\xa3\xa5\xff\x81\x98\x9c\x97\x1d\x5a\xa3\x25\xf9\x9e\x92\x30\xc8\xb2\xa1\xeb\xcb\xf5\x3a\x94\xd0\x2d\x96\xb6\xd1\x57\x47\xd0\x15\xba\x9e\xa6\x6c\xcc\x40\x35\xbe\xba\x9e\x67\x9a\x94\xf3\xb4\xa6\x81\x45\xba\xa6\xa9\xa8\xa7\x44\xa7\x82\xe4\x3b\x69\xb9\xd5\x75\xe8\xea\x16\x05\x77\x83\x06\x97\xbf\xa9\xe2\x8e\x29\x30\xba\x49\x5d\xf5\x0f\x96\xef\x52\x57\x76\x28\x51\x91\x74\x8b\xa5\x2d\xcf\x52\x8f\x12\xba\x31\xc8\xbf\xd1\xf4\xa2\x22\x94\x73\x69\x9d\x39\xea\xa9\xfd\xaa\x75\x2e\xa5\xcf\x8b\xae\x50\x42\x2b\x72\x1e\xff\x05\x00\x00\xff\xff\xfa\xcd\x5a\xe0\x46\x07\x00\x00")

func localesRuLc_messagesSesMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesSesMo,
		"locales/ru/LC_MESSAGES/ses.mo",
	)
}

func localesRuLc_messagesSesMo() (*asset, error) {
	bytes, err := localesRuLc_messagesSesMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/ses.mo", size: 1862, mode: os.FileMode(420), modTime: time.Unix(1522927452, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesSnsMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x41\x6f\x1b\x45\x14\xfe\xd6\xd9\x94\xd6\xd0\x96\x22\x54\x10\x20\xf5\x01\x6a\x01\xc1\x96\xb5\xdd\x4a\xd5\x26\x9b\xe2\x86\x54\xaa\x88\x43\x15\xbb\x1c\x7a\x5b\xec\xa9\xb3\xc2\xde\x5d\xed\xae\x43\x41\x3d\x34\x16\x52\x8a\x82\x54\x2e\x48\xc0\x81\x0a\xc4\x0f\x28\xa1\x0b\x56\x5a\xbb\x12\x5c\x39\xbc\x39\xc2\x81\x0b\x3f\x00\xae\xdc\xd0\xec\xac\x43\x90\x72\x60\x2e\xf3\xde\x37\xdf\xfb\xde\xf7\x9e\xe6\xf7\x27\xcc\xcf\x00\xe0\x18\x80\xe7\x00\x7c\x0b\xe0\x29\x00\xaf\x19\xc8\xcf\x2d\x03\x38\x0a\xe0\x63\x03\x78\x01\xc0\x17\x45\xfe\xc0\x00\x1e\x03\xf0\x8b\x01\x1c\x07\xf0\xab\x01\x1c\x04\xf0\x97\x01\x3c\x02\xe0\x6f\x03\x98\x01\x60\x94\x80\x47\x01\xcc\x96\xf4\xfb\xb1\xe2\x7e\xa6\x04\x3c\x0e\xe0\xc5\x12\x70\x18\xc0\x99\x12\x70\x08\xc0\x85\x12\x70\x00\xc0\x72\x71\x37\x4b\xc0\x9a\x01\x5c\x2d\x01\x27\x00\xfc\x3c\xa3\x7d\xfc\x31\x03\x3c\x0d\xe0\x80\x09\x3c\x09\xe0\x84\x09\x9c\x54\x3a\x26\xf0\x2c\x80\xab\xa6\xd6\x5f\x37\xb5\x8f\x4d\x13\x78\x09\xc0\x96\x09\x1c\x01\xf0\xbd\xa9\xe7\xfc\xa9\xa8\xff\xad\xe0\xff\x69\xea\xb9\x30\xab\x7d\x1e\x9e\xd5\xf8\xf1\x59\x40\xad\xa4\x0c\xed\xeb\x60\xb1\xb3\x43\x9a\x9a\xd7\x94\x00\x98\xd0\x7c\x35\xd3\x11\xbd\xc2\x7c\xfe\xa3\x45\xac\x76\x33\x83\x7d\x4e\xbd\x9d\xfa\xeb\x82\x12\x11\xaf\xfb\x6d\x91\xa0\xde\xf7\x3e\x0c\x03\x6a\xfa\xfd\xa8\x27\x68\x25\x4c\xfd\x6b\x7e\xdb\x4b\x7d\x85\x69\x0e\xea\x51\xd4\x9b\x62\xf5\xd5\x95\xbd\x79\x82\x45\x11\x17\x25\x82\xc4\xf5\xc8\x8f\x73\x1c\x4b\x41\x27\x0a\xfd\x20\xc5\x92\xc2\x44\x07\x97\xea\x0d\x2c\x7b\x49\x4a\x83\xa8\xe3\xa5\x02\xcd\xa9\x81\xe6\x5a\xf8\x3e\x79\xbd\x1e\x9a\x83\x77\x93\x76\xec\x47\xbb\x7d\xf6\x02\x09\x5a\x61\xe4\xb7\x73\x3c\x8f\x12\x5c\xd1\x42\xab\x22\x0a\xe3\xd4\x6a\x24\x5d\xbf\x63\x5d\x18\x74\x13\xab\x15\x3a\xd4\x11\xeb\x6f\xbc\xe7\xaf\x79\xfd\xf0\x74\x3c\x28\x5f\x7e\xbb\x65\x2d\xc6\x22\xb7\x66\xbd\xe9\xa5\xc2\xa1\xaa\x5d\x39\x67\xd9\x35\xab\x5a\xa3\x6a\xcd\x39\x7b\xf6\x55\xbb\x66\xdb\x65\xe5\xd0\x6a\xc5\x5e\x90\xf4\xbc\x34\x8c\x1d\x7a\x2b\xd7\xa0\xc6\x20\xf6\xfa\x61\x27\xa4\xf9\xff\x08\x2f\x94\x97\xbd\xa0\x3b\xf0\xba\xc2\x6a\x09\xaf\xef\xd0\x6e\xee\xd0\xea\x20\x49\x7c\x2f\x28\x37\x2e\x35\x96\xac\x77\x44\x9c\xf8\x61\xe0\x50\xe5\xb4\x5d\x5e\x0c\x83\x54\x04\xa9\xd5\xfa\x20\x12\x0e\xa5\xe2\x7a\xfa\x7a\xd4\xf3\xfc\x60\x8e\xda\x6b\x5e\x9c\x88\xd4\xbd\xd2\xba\x68\x9d\xfb\x97\xa7\xfc\x5c\x13\xb1\xb5\x14\xb4\xc3\x8e\x1f\x74\x1d\x2a\x5f\xee\x0d\x62\xaf\x67\x5d\x0c\xe3\x7e\xe2\x50\x10\xe5\x69\xe2\xd6\xe6\x48\x87\x6e\x70\xb2\x62\xbb\x6e\x85\x4e\x9d\x22\x15\xda\xcf\xbb\x95\x0a\x9d\x27\x9b\x9c\x3c\x5f\x70\xab\xd3\xa7\x79\xf7\x8c\x0a\x5f\xce\x69\xf3\x15\x9b\x6e\xdc\xd0\x25\x0b\x6e\xd5\x7e\x85\xce\x53\x85\x1c\xaa\xce\x81\x3f\xe5\x1d\x39\xe4\x11\x6f\xf3\x58\x6e\x71\x46\x72\x83\x33\x79\x93\xb7\x79\x24\x37\xe4\xd6\xff\xfa\x49\xab\x2b\xc4\x0f\xe5\x4d\x1e\xf1\x7d\x9e\xf0\x0f\x9c\xf1\x98\x47\xf2\x36\xf8\xce\x7e\xe0\xd7\x4a\x5f\xb5\x94\x1f\xf1\x88\x77\xf8\xae\x1c\x52\xde\x6c\xc8\x99\x4a\x39\x93\x43\xf0\x97\x3c\xe1\x31\x67\x72\x93\xc7\x7c\x57\xde\x26\x39\xe4\x89\xdc\x54\xef\xe0\xcf\xa7\x64\x79\x8b\x47\x9c\xe5\xbf\x90\xef\xf0\x44\x6e\xf0\x7d\xce\xf8\x9e\x2a\xe4\x8c\x78\xc2\xdf\xf1\x98\x27\xbc\x9d\xc3\xe3\x9c\xab\xdb\xef\x8e\xa7\xca\xf2\xa6\x3f\x2a\x1f\xf2\x13\xe2\x6d\xb5\x80\x62\x26\x9e\xf0\x3d\x7e\xa8\xa8\xbc\xc3\x23\x4d\xde\x0b\x28\x56\xee\xe4\x81\x92\xfa\x66\x1a\x7c\xb5\xdb\x77\xa4\x34\xf1\x4f\x00\x00\x00\xff\xff\x2f\x2b\x6b\x6a\x27\x05\x00\x00")

func localesRuLc_messagesSnsMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesSnsMo,
		"locales/ru/LC_MESSAGES/sns.mo",
	)
}

func localesRuLc_messagesSnsMo() (*asset, error) {
	bytes, err := localesRuLc_messagesSnsMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/sns.mo", size: 1319, mode: os.FileMode(420), modTime: time.Unix(1522927453, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/ses.html": templatesViewsSesHtml,
	"templates/views/sns.html": templatesViewsSnsHtml,
	"locales/ru/LC_MESSAGES/aws.mo": localesRuLc_messagesAwsMo,
	"locales/ru/LC_MESSAGES/config.mo": localesRuLc_messagesConfigMo,
	"locales/ru/LC_MESSAGES/ses.mo": localesRuLc_messagesSesMo,
	"locales/ru/LC_MESSAGES/sns.mo": localesRuLc_messagesSnsMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"aws.mo": &bintree{localesRuLc_messagesAwsMo, map[string]*bintree{}},
				"config.mo": &bintree{localesRuLc_messagesConfigMo, map[string]*bintree{}},
				"ses.mo": &bintree{localesRuLc_messagesSesMo, map[string]*bintree{}},
				"sns.mo": &bintree{localesRuLc_messagesSnsMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"ses.html": &bintree{templatesViewsSesHtml, map[string]*bintree{}},
			"sns.html": &bintree{templatesViewsSnsHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
